import Head from "next/head"
import { Geist, Geist_Mono } from "next/font/google"
import { DungeonSelect } from "../components/dungeonSelect/dungeonSelect"
import { useState } from "react"
import { DungeonLengthType, DungeonType } from "../types"
import { CONFIG } from "../config"
import { DungeonLengthSelect } from "../components/dungeonLengthSelect/dungeonLengthSelect"
import { ProvisionSuggestionGrid } from "../components/provisionSuggestionGrid/provisionSuggestionGrid"
import styles from "@styles/landing.module.scss"
import { Curio } from "../components/curio/curio"
import { primeSearch } from "../utils/format"
import { CurioSearch } from "../components/curioSearch/curioSearch"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

export default function Home() {
  const [dungeon, setDungeon] = useState<DungeonType>(CONFIG.dungeon.RUINS)
  const [curioSearch, setCurioSearch] = useState<string>("")
  const [dungeonLength, setDungeonLength] = useState<DungeonLengthType>(
    CONFIG.dungeonLength.SHORT
  )

  const provisions = CONFIG.dungeonProvisions.find(
    (p) => p.dungeon === dungeon && p.dungeonLength === dungeonLength
  )

  const curios = CONFIG.curios.filter((c) =>
    primeSearch(c.name).includes(primeSearch(curioSearch))
  )

  return (
    <>
      <Head>
        <title>Darkest Companion</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.root} ${geistSans.variable} ${geistMono.variable}`}
      >
        <main>
          <DungeonSelect dungeon={dungeon} setDungeon={setDungeon} />
          <hr />
          <DungeonLengthSelect
            dungeonLength={dungeonLength}
            setDungeonLength={setDungeonLength}
          />
          <hr />
          {provisions && (
            <ProvisionSuggestionGrid
              provisionSuggestions={provisions.provisionSuggestions}
            />
          )}

          <CurioSearch
            curioSearch={curioSearch}
            setCurioSearch={setCurioSearch}
          />

          {curios.map((curio) => (
            <Curio curio={curio} />
          ))}
        </main>
      </div>
    </>
  )
}
